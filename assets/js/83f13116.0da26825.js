"use strict";(self.webpackChunkjalapeno_api_gateway_documentation=self.webpackChunkjalapeno_api_gateway_documentation||[]).push([[3078],{5680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>m});var a=t(6540);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),d=p(t),y=s,m=d["".concat(i,".").concat(y)]||d[y]||c[y]||r;return t?a.createElement(m,o(o({ref:n},g),{},{components:t})):a.createElement(m,o({ref:n},g))}));function m(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,o=new Array(r);o[0]=y;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[d]="string"==typeof e?e:s,o[1]=l;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},3624:(e,n,t)=>{t.d(n,{A:()=>l});var a=t(6540),s=t(53);const r="tableOfContentsInline_0DDH";function o(e){let{toc:n,isChild:t}=e;return n.length?a.createElement("ul",{className:t?"":"table-of-contents"},n.map((e=>a.createElement("li",{key:e.id},a.createElement("a",{href:`#${e.id}`,dangerouslySetInnerHTML:{__html:e.value}}),a.createElement(o,{isChild:!0,toc:e.children}))))):null}const l=function(e){let{toc:n}=e;return a.createElement("div",{className:(0,s.A)(r)},a.createElement(o,{toc:n}))}},6190:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=t(8168),s=(t(6540),t(5680)),r=t(3624);const o={sidebar_position:1,title:"Request Service"},l=void 0,i={unversionedId:"api/request-service",id:"version-1.3.2/api/request-service",isDocsHomePage:!1,title:"Request Service",description:"Protobuf Definition",source:"@site/versioned_docs/version-1.3.2/api/request-service.md",sourceDirName:"api",slug:"/api/request-service",permalink:"/jagw/docs/1.3.2/api/request-service",editUrl:"https://github.com/jalapeno-api-gateway/versioned_docs/version-1.3.2/api/request-service.md",tags:[],version:"1.3.2",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Request Service"},sidebar:"version-1.3.2/tutorialSidebar",previous:{title:"Getting Started",permalink:"/jagw/docs/1.3.2/getting-started"},next:{title:"Subscription Service",permalink:"/jagw/docs/1.3.2/api/subscription-service"}},p=[{value:"Protobuf Definition",id:"protobuf-definition",children:[]},{value:"Methods",id:"methods",children:[{value:"<code>GetLsNodes()</code>",id:"getlsnodes",children:[]},{value:"<code>GetLsLinks()</code>",id:"getlslinks",children:[]},{value:"<code>GetLsPrefixes()</code>",id:"getlsprefixes",children:[]},{value:"<code>GetLsSrv6Sids()</code>",id:"getlssrv6sids",children:[]},{value:"<code>GetLsNodeEdges()</code>",id:"getlsnodeedges",children:[]},{value:"<code>GetTelemetryData()</code>",id:"gettelemetrydata",children:[]}]}],g={toc:p},d="wrapper";function c(e){let{components:n,...t}=e;return(0,s.yg)(d,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,s.yg)(r.A,{toc:p[p.length-1].children,mdxType:"TOCInline"}),(0,s.yg)("h2",{id:"protobuf-definition"},"Protobuf Definition"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-protobuf"},"service RequestService {\n    rpc GetLsNodes(TopologyRequest) returns (LsNodeResponse) {}\n    rpc GetLsLinks(TopologyRequest) returns (LsLinkResponse) {}\n    rpc GetLsPrefixes(TopologyRequest) returns (LsPrefixResponse) {}\n    rpc GetLsSrv6Sids(TopologyRequest) returns (LsSrv6SidResponse) {}\n    rpc GetLsNodeEdges(TopologyRequest) returns (LsNodeEdgeResponse) {}\n    rpc GetTelemetryData(TelemetryRequest) returns (TelemetryResponse) {}\n}\n")),(0,s.yg)("h2",{id:"methods"},"Methods"),(0,s.yg)("h3",{id:"getlsnodes"},(0,s.yg)("inlineCode",{parentName:"h3"},"GetLsNodes()")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetLsNodes(TopologyRequest) returns (LsNodeResponse) {}\n")),(0,s.yg)("p",null,(0,s.yg)("em",{parentName:"p"},"See also"),": ",(0,s.yg)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest"),", ",(0,s.yg)("a",{parentName:"p",href:"messages#lsnoderesponse"},"LsNodeResponse")),(0,s.yg)("h4",{id:"description"},"Description"),(0,s.yg)("p",null,"Takes a ",(0,s.yg)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest")," with the specified ",(0,s.yg)("strong",{parentName:"p"},"keys")," and ",(0,s.yg)("strong",{parentName:"p"},"properties")," and returns an ",(0,s.yg)("a",{parentName:"p",href:"messages#lsnoderesponse"},"LsNodeResponse")," containing all requested ",(0,s.yg)("a",{parentName:"p",href:"messages#lsnode"},"LsNodes")," with the requested properties."),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"Omitting ",(0,s.yg)("strong",{parentName:"li"},"keys")," returns all available ",(0,s.yg)("a",{parentName:"li",href:"messages#lsnode"},"LsNodes"),"."),(0,s.yg)("li",{parentName:"ul"},"Omitting ",(0,s.yg)("strong",{parentName:"li"},"properties")," returns ",(0,s.yg)("a",{parentName:"li",href:"messages#lsnode"},"LsNodes")," with all available properties.")),(0,s.yg)("h4",{id:"examples"},"Examples"),(0,s.yg)("details",{className:"codeBlockDetails"},(0,s.yg)("summary",null,"Example 1"),(0,s.yg)("div",null,"Request specific properties of specific LsNodes.",(0,s.yg)("div",{className:"codeBlockContainer"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'TopologyRequest {\n    "keys": [\n        "nodeKey1",\n        "nodeKey2"\n    ],\n    "properties": [\n        "Key",\n        "Name",\n        "Asn"\n    ]\n}\n'))),(0,s.yg)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.yg)("div",{className:"codeBlockContainer"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'LsNodeResponse {\n    "LsNodes": [\n        {\n            "Key": "nodeKey1",\n            "Name": "XR-1",\n            "Asn": 65001\n        },\n        {\n            "Key": "nodeKey2",\n            "Name": "XR-2",\n            "Asn": 65001\n        }\n    ]\n}\n'))))),(0,s.yg)("details",{className:"codeBlockDetails"},(0,s.yg)("summary",null,"Example 2"),(0,s.yg)("div",null,"Request specific properties of all available LsNodes.",(0,s.yg)("div",{className:"codeBlockContainer"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'TopologyRequest {\n    "properties": [\n        "Key",\n        "Name",\n        "Asn"\n    ]\n}\n'))),(0,s.yg)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.yg)("div",{className:"codeBlockContainer"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'LsNodeResponse {\n    "LsNodes": [\n        ...\n        {\n            "Key": "nodeKey7",\n            "Name": "XR-7",\n            "Asn": 65002\n        },\n        ...\n    ]\n}\n'))))),(0,s.yg)("details",{className:"codeBlockDetails"},(0,s.yg)("summary",null,"Example 3"),(0,s.yg)("div",null,"Request all properties of specific LsNodes.",(0,s.yg)("div",{className:"codeBlockContainer"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'TopologyRequest {\n    "keys": [\n        "nodeKey1",\n        "nodeKey2"\n    ],\n}\n'))),(0,s.yg)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.yg)("div",{className:"codeBlockContainer"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'LsNodeResponse {\n    "LsNodes": [\n        {\n            "Key": "nodeKey1",\n            "Id": 773,\n            "RouterHash": "7eb583cb3c17c496cfa9370d9bc2a3eb",\n            ...\n        },\n        {\n            "Key": "nodeKey2",\n            "Id": 809,\n            "RouterHash": "8a75f65ed2153517f0e4e25f7e5112e8",\n            ...\n        }\n    ]\n}\n'))))),(0,s.yg)("details",{className:"codeBlockDetails"},(0,s.yg)("summary",null,"Example 4"),(0,s.yg)("div",null,"Request all properties of all available LsNodes.",(0,s.yg)("div",{className:"codeBlockContainer"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},"TopologyRequest {}\n"))),(0,s.yg)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.yg)("div",{className:"codeBlockContainer"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'LsNodeResponse {\n    "LsNodes": [\n        ...\n        {\n            "Key": "nodeKey7",\n            "Id": 773,\n            "RouterHash": "7eb583cb3c17c496cfa9370d9bc2a3eb",\n            ...\n        },\n        ...\n    ]\n}\n'))))),(0,s.yg)("h3",{id:"getlslinks"},(0,s.yg)("inlineCode",{parentName:"h3"},"GetLsLinks()")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetLsLinks(TopologyRequest) returns (LsLinkResponse) {}\n")),(0,s.yg)("p",null,(0,s.yg)("em",{parentName:"p"},"See also"),": ",(0,s.yg)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest"),", ",(0,s.yg)("a",{parentName:"p",href:"messages#lslinkresponse"},"LsLinkResponse")),(0,s.yg)("h4",{id:"description-1"},"Description"),(0,s.yg)("p",null,"See method ",(0,s.yg)("a",{parentName:"p",href:"#getlsnodes"},"GetLsNodes()"),". It follows the same principle regarding ",(0,s.yg)("strong",{parentName:"p"},"keys")," and ",(0,s.yg)("strong",{parentName:"p"},"properties"),"."),(0,s.yg)("h3",{id:"getlsprefixes"},(0,s.yg)("inlineCode",{parentName:"h3"},"GetLsPrefixes()")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetLsPrefixes(TopologyRequest) returns (LsPrefixResponse) {}\n")),(0,s.yg)("p",null,(0,s.yg)("em",{parentName:"p"},"See also"),": ",(0,s.yg)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest"),", ",(0,s.yg)("a",{parentName:"p",href:"messages#lsprefixresponse"},"LsPrefixResponse")),(0,s.yg)("h4",{id:"description-2"},"Description"),(0,s.yg)("p",null,"See method ",(0,s.yg)("a",{parentName:"p",href:"#getlsnodes"},"GetLsNodes()"),". It follows the same principle regarding ",(0,s.yg)("strong",{parentName:"p"},"keys")," and ",(0,s.yg)("strong",{parentName:"p"},"properties"),"."),(0,s.yg)("h3",{id:"getlssrv6sids"},(0,s.yg)("inlineCode",{parentName:"h3"},"GetLsSrv6Sids()")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetLsSrv6Sids(TopologyRequest) returns (LsSrv6SidResponse) {}\n")),(0,s.yg)("p",null,(0,s.yg)("em",{parentName:"p"},"See also"),": ",(0,s.yg)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest"),", ",(0,s.yg)("a",{parentName:"p",href:"messages#lssrv6sidresponse"},"LsSrv6SidResponse")),(0,s.yg)("h4",{id:"description-3"},"Description"),(0,s.yg)("p",null,"See method ",(0,s.yg)("a",{parentName:"p",href:"#getlsnodes"},"GetLsNodes()"),". It follows the same principle regarding ",(0,s.yg)("strong",{parentName:"p"},"keys")," and ",(0,s.yg)("strong",{parentName:"p"},"properties"),"."),(0,s.yg)("h3",{id:"getlsnodeedges"},(0,s.yg)("inlineCode",{parentName:"h3"},"GetLsNodeEdges()")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetLsNodeEdges(TopologyRequest) returns (LsNodeEdgeResponse) {}\n")),(0,s.yg)("p",null,(0,s.yg)("em",{parentName:"p"},"See also"),": ",(0,s.yg)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest"),", ",(0,s.yg)("a",{parentName:"p",href:"messages#lsnodeedgeresponse"},"LsNodeEdgeResponse")),(0,s.yg)("h4",{id:"description-4"},"Description"),(0,s.yg)("p",null,"See method ",(0,s.yg)("a",{parentName:"p",href:"#getlsnodes"},"GetLsNodes()"),". It follows the same principle regarding ",(0,s.yg)("strong",{parentName:"p"},"keys")," and ",(0,s.yg)("strong",{parentName:"p"},"properties"),"."),(0,s.yg)("h3",{id:"gettelemetrydata"},(0,s.yg)("inlineCode",{parentName:"h3"},"GetTelemetryData()")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetTelemetryData(TelemetryRequest) returns (TelemetryResponse) {}\n")),(0,s.yg)("p",null,(0,s.yg)("em",{parentName:"p"},"See also"),": ",(0,s.yg)("a",{parentName:"p",href:"messages#telemetryrequest"},"TelemetryRequest"),", ",(0,s.yg)("a",{parentName:"p",href:"messages#telemetryresponse"},"TelemetryResponse")),(0,s.yg)("h4",{id:"description-5"},"Description"),(0,s.yg)("p",null,"Takes a ",(0,s.yg)("a",{parentName:"p",href:"messages#telemetryrequest"},"TelemetryRequest")," and returns a ",(0,s.yg)("a",{parentName:"p",href:"messages#telemetryresponse"},"TelemetryResponse")," containing an array of JSON strings."),(0,s.yg)("p",null,"The Jalape\xf1o API Gateway works with all Yang Models that are supported by Jalape\xf1o. To use a Yang Model, simply configure it on the routers and supply the Sensor Path in the request."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-protobuf"},"message TelemetryRequest {\n    required string sensor_path = 1;\n    repeated string properties = 2;\n    optional bool Unflatten = 3;\n    repeated StringFilter string_filters = 4;\n    optional RangeFilter range_filter = 5;\n}\n")),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("strong",{parentName:"li"},"SensorPath"),": Sensor Path of which data is requested (i.e. ",(0,s.yg)("inlineCode",{parentName:"li"},'"Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface"'),")"),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("strong",{parentName:"li"},"Properties"),": String array of properties to select from the Yang Model. The property names are the ",(0,s.yg)("strong",{parentName:"li"},"exact")," sensor path that point to the property but without the more generic Sensor Path specified before, (i.e. ",(0,s.yg)("inlineCode",{parentName:"li"},'"data_rates/output_data_rate"'),")"),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("strong",{parentName:"li"},"StringFilter"),": Allows to filter by string values."),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("strong",{parentName:"li"},"RangeFilter"),": Allows to request a range of data.")),(0,s.yg)("br",null),(0,s.yg)("div",{className:"admonition admonition-info alert alert--info"},(0,s.yg)("div",{parentName:"div",className:"admonition-heading"},(0,s.yg)("h5",{parentName:"div"},(0,s.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,s.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"JAGW Explorer")),(0,s.yg)("div",{parentName:"div",className:"admonition-content"},(0,s.yg)("p",{parentName:"div"},"The SR-App ",(0,s.yg)("strong",{parentName:"p"},"JAGW Explorer")," is a useful tool that can help you determine the exact name of the SensorPath and the Properties called JAGW Explorer. The code is available on ",(0,s.yg)("a",{parentName:"p",href:"https://github.com/INSRapperswil/jagw-explorer"},"GitHub"),". The application can be deployed using the docker image or in a Kubernetes cluster using the Helm chart."))),(0,s.yg)("h4",{id:"examples-1"},"Examples"),(0,s.yg)("details",{className:"codeBlockDetails"},(0,s.yg)("summary",null,"Example 1"),(0,s.yg)("div",null,(0,s.yg)("div",{className:"codeBlockContainer"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'TelemetryRequest {\n    "SensorPath": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface",\n    "Properties": [\n        "data_rates/output_data_rate",\n        "interface_statistics/full_interface_stats/bytes_sent"\n        ],\n    "Unflatten": false,\n    "StringFilter": [\n        {\n            "Property": "source",\n            "Value": "XR-8",\n            "Operator": StringOperator.EQUAL\n        }\n    ],\n    "RangeFilter": {\n        "EarliestTimestamp": 1630050953974000000\n    }\n}\n'))),(0,s.yg)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.yg)("div",{className:"codeBlockContainer"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'TelemetryResponse {\n    "TelemetryData": [\n        "{\n            \\"time\\": \\"2021-11-10T08:53:08.382Z\\",\n            \\"data_rates/output_data_rate\\": 53,\n            \\"interface_statistics/full_interface_stats/bytes_sent\\": 447\n        }"\n    ]\n}\n')),(0,s.yg)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.yg)("p",null,"The JSON string can then be parsed to this:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "time": "2021-11-10T08:53:08.382Z",\n    "data_rates/output_data_rate": 53,\n    "interface_statistics/full_interface_stats/bytes_sent": 447\n}\n')),(0,s.yg)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.yg)("p",null,"If ",(0,s.yg)("strong",{parentName:"p"},"Unflatten")," is set to ",(0,s.yg)("strong",{parentName:"p"},"true")," in the original request, the resulting JSON would look like this:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "time": "2021-11-10T08:53:08.382Z",\n    "data_rates": {\n        "output_data_rate": 53,\n    },\n    "interface_statistics": {\n        "full_interface_stats": {\n            "bytes_sent": 447\n        }\n    }\n}\n'))))))}c.isMDXComponent=!0},53:(e,n,t)=>{function a(e){var n,t,s="";if("string"==typeof e||"number"==typeof e)s+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(s&&(s+=" "),s+=t);else for(n in e)e[n]&&(s&&(s+=" "),s+=n);return s}t.d(n,{A:()=>s});const s=function(){for(var e,n,t=0,s="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(s&&(s+=" "),s+=n);return s}}}]);