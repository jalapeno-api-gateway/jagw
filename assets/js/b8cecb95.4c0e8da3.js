"use strict";(self.webpackChunkjalapeno_api_gateway_documentation=self.webpackChunkjalapeno_api_gateway_documentation||[]).push([[8823],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(i,".").concat(m)]||u[m]||c[m]||s;return n?a.createElement(k,o(o({ref:t},d),{},{components:n})):a.createElement(k,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<s;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3873:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(7294),r=n(6010),s="tableOfContentsInline_3fWc";function o(e){var t=e.toc,n=e.isChild;return t.length?a.createElement("ul",{className:n?"":"table-of-contents"},t.map((function(e){return a.createElement("li",{key:e.id},a.createElement("a",{href:"#"+e.id,dangerouslySetInnerHTML:{__html:e.value}}),a.createElement(o,{isChild:!0,toc:e.children}))}))):null}var l=function(e){var t=e.toc;return a.createElement("div",{className:(0,r.Z)(s)},a.createElement(o,{toc:t}))}},9702:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return c},default:function(){return m}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),o=n(3873),l=["components"],i={sidebar_position:1,title:"Request Service"},p=void 0,d={unversionedId:"api/request-service",id:"version-1.3.0/api/request-service",isDocsHomePage:!1,title:"Request Service",description:"Protobuf Definition",source:"@site/versioned_docs/version-1.3.0/api/request-service.md",sourceDirName:"api",slug:"/api/request-service",permalink:"/jagw-docs/docs/api/request-service",editUrl:"https://github.com/jalapeno-api-gateway/versioned_docs/version-1.3.0/api/request-service.md",tags:[],version:"1.3.0",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Request Service"},sidebar:"version-1.3.0/tutorialSidebar",previous:{title:"Getting Started",permalink:"/jagw-docs/docs/getting-started"},next:{title:"Subscription Service",permalink:"/jagw-docs/docs/api/subscription-service"}},c=[{value:"Protobuf Definition",id:"protobuf-definition",children:[]},{value:"Methods",id:"methods",children:[{value:"<code>GetLsNodes()</code>",id:"getlsnodes",children:[]},{value:"<code>GetLsLinks()</code>",id:"getlslinks",children:[]},{value:"<code>GetLsPrefixes()</code>",id:"getlsprefixes",children:[]},{value:"<code>GetLsSrv6Sids()</code>",id:"getlssrv6sids",children:[]},{value:"<code>GetLsNodeEdges()</code>",id:"getlsnodeedges",children:[]},{value:"<code>GetTelemetryData()</code>",id:"gettelemetrydata",children:[]}]}],u={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(o.Z,{toc:c[c.length-1].children,mdxType:"TOCInline"}),(0,s.kt)("h2",{id:"protobuf-definition"},"Protobuf Definition"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-protobuf"},"service RequestService {\n    rpc GetLsNodes(TopologyRequest) returns (LsNodeResponse) {}\n    rpc GetLsLinks(TopologyRequest) returns (LsLinkResponse) {}\n    rpc GetLsPrefixes(TopologyRequest) returns (LsPrefixResponse) {}\n    rpc GetLsSrv6Sids(TopologyRequest) returns (LsSrv6SidResponse) {}\n    rpc GetLsNodeEdges(TopologyRequest) returns (LsNodeEdgeResponse) {}\n    rpc GetTelemetryData(TelemetryRequest) returns (TelemetryResponse) {}\n}\n")),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)("h3",{id:"getlsnodes"},(0,s.kt)("inlineCode",{parentName:"h3"},"GetLsNodes()")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetLsNodes(TopologyRequest) returns (LsNodeResponse) {}\n")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"See also"),": ",(0,s.kt)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest"),", ",(0,s.kt)("a",{parentName:"p",href:"messages#lsnoderesponse"},"LsNodeResponse")),(0,s.kt)("h4",{id:"description"},"Description"),(0,s.kt)("p",null,"Takes a ",(0,s.kt)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest")," with the specified ",(0,s.kt)("strong",{parentName:"p"},"keys")," and ",(0,s.kt)("strong",{parentName:"p"},"properties")," and returns an ",(0,s.kt)("a",{parentName:"p",href:"messages#lsnoderesponse"},"LsNodeResponse")," containing all requested ",(0,s.kt)("a",{parentName:"p",href:"messages#lsnode"},"LsNodes")," with the requested properties."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Omitting ",(0,s.kt)("strong",{parentName:"li"},"keys")," returns all available ",(0,s.kt)("a",{parentName:"li",href:"messages#lsnode"},"LsNodes"),"."),(0,s.kt)("li",{parentName:"ul"},"Omitting ",(0,s.kt)("strong",{parentName:"li"},"properties")," returns ",(0,s.kt)("a",{parentName:"li",href:"messages#lsnode"},"LsNodes")," with all available properties.")),(0,s.kt)("h4",{id:"examples"},"Examples"),(0,s.kt)("details",{className:"codeBlockDetails"},(0,s.kt)("summary",null,"Example 1"),(0,s.kt)("div",null,"Request specific properties of specific LsNodes.",(0,s.kt)("div",{className:"codeBlockContainer"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'TopologyRequest {\n    "keys": [\n        "nodeKey1",\n        "nodeKey2"\n    ],\n    "properties": [\n        "Key",\n        "Name",\n        "Asn"\n    ]\n}\n'))),(0,s.kt)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.kt)("div",{className:"codeBlockContainer"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'LsNodeResponse {\n    "LsNodes": [\n        {\n            "Key": "nodeKey1",\n            "Name": "XR-1",\n            "Asn": 65001\n        },\n        {\n            "Key": "nodeKey2",\n            "Name": "XR-2",\n            "Asn": 65001\n        }\n    ]\n}\n'))))),(0,s.kt)("details",{className:"codeBlockDetails"},(0,s.kt)("summary",null,"Example 2"),(0,s.kt)("div",null,"Request specific properties of all available LsNodes.",(0,s.kt)("div",{className:"codeBlockContainer"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'TopologyRequest {\n    "properties": [\n        "Key",\n        "Name",\n        "Asn"\n    ]\n}\n'))),(0,s.kt)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.kt)("div",{className:"codeBlockContainer"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'LsNodeResponse {\n    "LsNodes": [\n        ...\n        {\n            "Key": "nodeKey7",\n            "Name": "XR-7",\n            "Asn": 65002\n        },\n        ...\n    ]\n}\n'))))),(0,s.kt)("details",{className:"codeBlockDetails"},(0,s.kt)("summary",null,"Example 3"),(0,s.kt)("div",null,"Request all properties of specific LsNodes.",(0,s.kt)("div",{className:"codeBlockContainer"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'TopologyRequest {\n    "keys": [\n        "nodeKey1",\n        "nodeKey2"\n    ],\n}\n'))),(0,s.kt)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.kt)("div",{className:"codeBlockContainer"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'LsNodeResponse {\n    "LsNodes": [\n        {\n            "Key": "nodeKey1",\n            "Id": 773,\n            "RouterHash": "7eb583cb3c17c496cfa9370d9bc2a3eb",\n            ...\n        },\n        {\n            "Key": "nodeKey2",\n            "Id": 809,\n            "RouterHash": "8a75f65ed2153517f0e4e25f7e5112e8",\n            ...\n        }\n    ]\n}\n'))))),(0,s.kt)("details",{className:"codeBlockDetails"},(0,s.kt)("summary",null,"Example 4"),(0,s.kt)("div",null,"Request all properties of all available LsNodes.",(0,s.kt)("div",{className:"codeBlockContainer"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},"TopologyRequest {}\n"))),(0,s.kt)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.kt)("div",{className:"codeBlockContainer"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'LsNodeResponse {\n    "LsNodes": [\n        ...\n        {\n            "Key": "nodeKey7",\n            "Id": 773,\n            "RouterHash": "7eb583cb3c17c496cfa9370d9bc2a3eb",\n            ...\n        },\n        ...\n    ]\n}\n'))))),(0,s.kt)("h3",{id:"getlslinks"},(0,s.kt)("inlineCode",{parentName:"h3"},"GetLsLinks()")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetLsLinks(TopologyRequest) returns (LsLinkResponse) {}\n")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"See also"),": ",(0,s.kt)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest"),", ",(0,s.kt)("a",{parentName:"p",href:"messages#lslinkresponse"},"LsLinkResponse")),(0,s.kt)("h4",{id:"description-1"},"Description"),(0,s.kt)("p",null,"See method ",(0,s.kt)("a",{parentName:"p",href:"#getlsnodes"},"GetLsNodes()"),". It follows the same principle regarding ",(0,s.kt)("strong",{parentName:"p"},"keys")," and ",(0,s.kt)("strong",{parentName:"p"},"properties"),"."),(0,s.kt)("h3",{id:"getlsprefixes"},(0,s.kt)("inlineCode",{parentName:"h3"},"GetLsPrefixes()")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetLsPrefixes(TopologyRequest) returns (LsPrefixResponse) {}\n")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"See also"),": ",(0,s.kt)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest"),", ",(0,s.kt)("a",{parentName:"p",href:"messages#lsprefixresponse"},"LsPrefixResponse")),(0,s.kt)("h4",{id:"description-2"},"Description"),(0,s.kt)("p",null,"See method ",(0,s.kt)("a",{parentName:"p",href:"#getlsnodes"},"GetLsNodes()"),". It follows the same principle regarding ",(0,s.kt)("strong",{parentName:"p"},"keys")," and ",(0,s.kt)("strong",{parentName:"p"},"properties"),"."),(0,s.kt)("h3",{id:"getlssrv6sids"},(0,s.kt)("inlineCode",{parentName:"h3"},"GetLsSrv6Sids()")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetLsSrv6Sids(TopologyRequest) returns (LsSrv6SidResponse) {}\n")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"See also"),": ",(0,s.kt)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest"),", ",(0,s.kt)("a",{parentName:"p",href:"messages#lssrv6sidresponse"},"LsSrv6SidResponse")),(0,s.kt)("h4",{id:"description-3"},"Description"),(0,s.kt)("p",null,"See method ",(0,s.kt)("a",{parentName:"p",href:"#getlsnodes"},"GetLsNodes()"),". It follows the same principle regarding ",(0,s.kt)("strong",{parentName:"p"},"keys")," and ",(0,s.kt)("strong",{parentName:"p"},"properties"),"."),(0,s.kt)("h3",{id:"getlsnodeedges"},(0,s.kt)("inlineCode",{parentName:"h3"},"GetLsNodeEdges()")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetLsNodeEdges(TopologyRequest) returns (LsNodeEdgeResponse) {}\n")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"See also"),": ",(0,s.kt)("a",{parentName:"p",href:"messages#topologyrequest"},"TopologyRequest"),", ",(0,s.kt)("a",{parentName:"p",href:"messages#lsnodeedgeresponse"},"LsNodeEdgeResponse")),(0,s.kt)("h4",{id:"description-4"},"Description"),(0,s.kt)("p",null,"See method ",(0,s.kt)("a",{parentName:"p",href:"#getlsnodes"},"GetLsNodes()"),". It follows the same principle regarding ",(0,s.kt)("strong",{parentName:"p"},"keys")," and ",(0,s.kt)("strong",{parentName:"p"},"properties"),"."),(0,s.kt)("h3",{id:"gettelemetrydata"},(0,s.kt)("inlineCode",{parentName:"h3"},"GetTelemetryData()")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc GetTelemetryData(TelemetryRequest) returns (TelemetryResponse) {}\n")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"See also"),": ",(0,s.kt)("a",{parentName:"p",href:"messages#telemetryrequest"},"TelemetryRequest"),", ",(0,s.kt)("a",{parentName:"p",href:"messages#telemetryresponse"},"TelemetryResponse")),(0,s.kt)("h4",{id:"description-5"},"Description"),(0,s.kt)("p",null,"Takes a ",(0,s.kt)("a",{parentName:"p",href:"messages#telemetryrequest"},"TelemetryRequest")," and returns a ",(0,s.kt)("a",{parentName:"p",href:"messages#telemetryresponse"},"TelemetryResponse")," containing an array of JSON strings."),(0,s.kt)("p",null,"The Jalape\xf1o API Gateway works with all Yang Models that are supported by Jalape\xf1o. To use a Yang Model, simply configure it on the routers and supply the Sensor Path in the request."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TelemetryRequest {\n    required string sensor_path = 1;\n    repeated string properties = 2;\n    optional bool Unflatten = 3;\n    repeated StringFilter string_filters = 4;\n    optional RangeFilter range_filter = 5;\n}\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"SensorPath"),": Sensor Path of which data is requested (i.e. ",(0,s.kt)("inlineCode",{parentName:"li"},'"Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface"'),")"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Properties"),": String array of properties to select from the Yang Model. The property names are the ",(0,s.kt)("strong",{parentName:"li"},"exact")," sensor path that point to the property but without the more generic Sensor Path specified before, (i.e. ",(0,s.kt)("inlineCode",{parentName:"li"},'"data_rates/output_data_rate"'),")"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"StringFilter"),": Allows to filter by string values."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"RangeFilter"),": Allows to request a range of data.")),(0,s.kt)("br",null),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"JAGW Explorer")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The SR-App ",(0,s.kt)("strong",{parentName:"p"},"JAGW Explorer")," is a useful tool that can help you determine the exact name of the SensorPath and the Properties called JAGW Explorer. The code is available on ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/INSRapperswil/jagw-explorer"},"GitHub"),". The application can be deployed using the docker image or in a Kubernetes cluster using the Helm chart."))),(0,s.kt)("h4",{id:"examples-1"},"Examples"),(0,s.kt)("details",{className:"codeBlockDetails"},(0,s.kt)("summary",null,"Example 1"),(0,s.kt)("div",null,(0,s.kt)("div",{className:"codeBlockContainer"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'TelemetryRequest {\n    "SensorPath": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface",\n    "Properties": [\n        "data_rates/output_data_rate",\n        "interface_statistics/full_interface_stats/bytes_sent"\n        ],\n    "Unflatten": false,\n    "StringFilter": [\n        {\n            "Property": "source",\n            "Value": "XR-8",\n            "Operator": StringOperator.EQUAL\n        }\n    ],\n    "RangeFilter": {\n        "EarliestTimestamp": 1630050953974000000\n    }\n}\n'))),(0,s.kt)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.kt)("div",{className:"codeBlockContainer"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'TelemetryResponse {\n    "TelemetryData": [\n        "{\n            \\"time\\": \\"2021-11-10T08:53:08.382Z\\",\n            \\"data_rates/output_data_rate\\": 53,\n            \\"interface_statistics/full_interface_stats/bytes_sent\\": 447\n        }"\n    ]\n}\n')),(0,s.kt)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.kt)("p",null,"The JSON string can then be parsed to this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "time": "2021-11-10T08:53:08.382Z",\n    "data_rates/output_data_rate": 53,\n    "interface_statistics/full_interface_stats/bytes_sent": 447\n}\n')),(0,s.kt)("div",{className:"downArrow"},"\ud83e\udc17"),(0,s.kt)("p",null,"If ",(0,s.kt)("strong",{parentName:"p"},"Unflatten")," is set to ",(0,s.kt)("strong",{parentName:"p"},"true")," in the original request, the resulting JSON would look like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "time": "2021-11-10T08:53:08.382Z",\n    "data_rates": {\n        "output_data_rate": 53,\n    },\n    "interface_statistics": {\n        "full_interface_stats": {\n            "bytes_sent": 447\n        }\n    }\n}\n'))))))}m.isMDXComponent=!0},6010:function(e,t,n){function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})}}]);